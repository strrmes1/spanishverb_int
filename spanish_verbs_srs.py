import streamlit as st
import os
import requests
from urllib.parse import urlencode
import base64

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
st.set_page_config(page_title="üá™üá∏ Debug OAuth", page_icon="üá™üá∏")

# OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GOOGLE_CLIENT_ID = os.getenv('GOOGLE_CLIENT_ID', '')
GOOGLE_CLIENT_SECRET = os.getenv('GOOGLE_CLIENT_SECRET', '')
REDIRECT_URI = os.getenv('REDIRECT_URI', '')
GOOGLE_AUTH_URL = "https://accounts.google.com/o/oauth2/auth"
GOOGLE_TOKEN_URL = "https://oauth2.googleapis.com/token"
GOOGLE_USERINFO_URL = "https://www.googleapis.com/oauth2/v2/userinfo"

def main():
    st.title("üîç OAuth Debug Tool")
    
    # –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    st.write("### üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º query parameters
    st.write("**Query Parameters:**")
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        query_params = st.query_params
        st.write(f"st.query_params: {dict(query_params)}")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
        import streamlit as st_alt
        try:
            alt_params = st_alt.experimental_get_query_params()
            st.write(f"experimental (fallback): {alt_params}")
        except:
            st.write("experimental API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    st.write("**URL –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**")
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π URL —á–µ—Ä–µ–∑ JavaScript
        st.components.v1.html("""
        <script>
        window.parent.postMessage({
            type: 'streamlit:componentReady',
            data: {
                url: window.location.href,
                search: window.location.search,
                hash: window.location.hash
            }
        }, '*');
        </script>
        <p>–¢–µ–∫—É—â–∏–π URL: <span id="url">Loading...</span></p>
        <script>
        document.getElementById('url').textContent = window.location.href;
        </script>
        """, height=100)
    except:
        st.write("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL —á–µ—Ä–µ–∑ JavaScript")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    st.write("**Environment Variables:**")
    st.write(f"GOOGLE_CLIENT_ID: {'‚úÖ Set' if GOOGLE_CLIENT_ID else '‚ùå Missing'}")
    st.write(f"GOOGLE_CLIENT_SECRET: {'‚úÖ Set' if GOOGLE_CLIENT_SECRET else '‚ùå Missing'}")
    st.write(f"REDIRECT_URI: {REDIRECT_URI}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º session state
    st.write("**Session State:**")
    if 'oauth_state' not in st.session_state:
        st.session_state.oauth_state = None
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    
    st.write(f"oauth_state: {st.session_state.oauth_state}")
    st.write(f"authenticated: {st.session_state.authenticated}")
    
    # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ callback
    query_params = st.query_params
    
    if 'code' in query_params:
        st.success("üéâ –ù–∞–π–¥–µ–Ω authorization code!")
        
        code = query_params['code']
        state = query_params.get('state', '')
        
        st.write(f"**Code:** {code[:30]}...")
        st.write(f"**State:** {state[:30]}...")
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if st.button("üîÑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é", type="primary"):
            process_oauth_code(code, state)
    
    elif st.session_state.authenticated:
        st.success("‚úÖ –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!")
        
        if st.button("üö™ –í—ã–π—Ç–∏"):
            st.session_state.authenticated = False
            st.session_state.user_info = None
            st.rerun()
    
    else:
        st.info("üë§ –í–æ–π–¥–∏—Ç–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è")
        
        if GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º auth URL
            if st.button("üîê –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google", type="primary"):
                auth_url = generate_auth_url()
                st.markdown(f'<meta http-equiv="refresh" content="0; url={auth_url}">', unsafe_allow_html=True)
                st.write(f"–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞: {auth_url}")
        else:
            st.error("‚ùå OAuth –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ URL
    if query_params:
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å URL"):
            st.query_params.clear()
            st.rerun()

def generate_auth_url():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    state = base64.urlsafe_b64encode(os.urandom(32)).decode('utf-8')
    st.session_state.oauth_state = state
    
    params = {
        'client_id': GOOGLE_CLIENT_ID,
        'redirect_uri': REDIRECT_URI,
        'scope': 'openid email profile',
        'response_type': 'code',
        'state': state,
        'access_type': 'offline',
        'prompt': 'consent'
    }
    
    return f"{GOOGLE_AUTH_URL}?{urlencode(params)}"

def process_oauth_code(code, state):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth –∫–æ–¥"""
    st.write("### üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º state
    if state != st.session_state.oauth_state:
        st.error(f"‚ùå State –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –ø–æ–ª—É—á–µ–Ω {state[:10]}..., –æ–∂–∏–¥–∞–ª—Å—è {st.session_state.oauth_state[:10] if st.session_state.oauth_state else 'None'}...")
        return
    
    st.write("‚úÖ State –ø—Ä–æ–≤–µ—Ä–µ–Ω")
    
    # –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω
    st.write("üîÑ –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω...")
    
    data = {
        'client_id': GOOGLE_CLIENT_ID,
        'client_secret': GOOGLE_CLIENT_SECRET,
        'code': code,
        'grant_type': 'authorization_code',
        'redirect_uri': REDIRECT_URI,
    }
    
    try:
        response = requests.post(GOOGLE_TOKEN_URL, data=data, timeout=10)
        st.write(f"Token request status: {response.status_code}")
        
        if response.status_code == 200:
            token_data = response.json()
            st.write("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
            
            access_token = token_data.get('access_token')
            if access_token:
                st.write("üîÑ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                headers = {'Authorization': f'Bearer {access_token}'}
                user_response = requests.get(GOOGLE_USERINFO_URL, headers=headers, timeout=10)
                
                if user_response.status_code == 200:
                    user_info = user_response.json()
                    st.write("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω!")
                    
                    st.json(user_info)
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session
                    st.session_state.authenticated = True
                    st.session_state.user_info = user_info
                    
                    st.success("üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    
                    # –û—á–∏—â–∞–µ–º URL
                    if st.button("üöÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"):
                        st.query_params.clear()
                        st.rerun()
                        
                else:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_response.status_code}")
                    st.code(user_response.text)
            else:
                st.error("‚ùå Access token –Ω–µ –Ω–∞–π–¥–µ–Ω")
                st.json(token_data)
        else:
            st.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞: {response.status_code}")
            st.code(response.text)
            
    except Exception as e:
        st.error(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    main()
