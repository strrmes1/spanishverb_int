import streamlit as st
import os
import requests
from urllib.parse import urlencode
import base64

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
st.set_page_config(page_title="üá™üá∏ Debug OAuth", page_icon="üá™üá∏")

# OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GOOGLE_CLIENT_ID = os.getenv('GOOGLE_CLIENT_ID', '')
GOOGLE_CLIENT_SECRET = os.getenv('GOOGLE_CLIENT_SECRET', '')
REDIRECT_URI = os.getenv('REDIRECT_URI', '')
GOOGLE_AUTH_URL = "https://accounts.google.com/o/oauth2/auth"
GOOGLE_TOKEN_URL = "https://oauth2.googleapis.com/token"
GOOGLE_USERINFO_URL = "https://www.googleapis.com/oauth2/v2/userinfo"

def main():
    st.title("üîç OAuth Debug Tool - Fixed Version")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
    if 'oauth_state' not in st.session_state:
        st.session_state.oauth_state = None
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    if 'user_info' not in st.session_state:
        st.session_state.user_info = None
    
    # –û–¢–õ–ê–î–ö–ê: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç
    st.write("### üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º query parameters –¢–û–õ–¨–ö–û –Ω–æ–≤—ã–º —Å–ø–æ—Å–æ–±–æ–º
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –æ–±—ã—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        query_params = {}
        for key in st.query_params:
            query_params[key] = st.query_params[key]
        
        st.write("**Query Parameters (–Ω–æ–≤—ã–π API):**")
        st.json(query_params)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ raw –∑–Ω–∞—á–µ–Ω–∏—è
        st.write("**Raw query_params –æ–±—ä–µ–∫—Ç:**")
        st.write(f"–¢–∏–ø: {type(st.query_params)}")
        st.write(f"–ö–ª—é—á–∏: {list(st.query_params.keys())}")
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ —Å query_params: {e}")
        query_params = {}
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º URL —á–µ—Ä–µ–∑ JavaScript
    st.markdown("""
    <div style="background: #f0f0f0; padding: 15px; border-radius: 8px; margin: 10px 0;">
        <strong>–¢–µ–∫—É—â–∏–π URL:</strong> <span id="current-url">Loading...</span><br>
        <strong>Search –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</strong> <span id="search-params">Loading...</span>
    </div>
    
    <script>
    document.getElementById('current-url').textContent = window.location.href;
    document.getElementById('search-params').textContent = window.location.search || '(–Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤)';
    console.log('Current URL:', window.location.href);
    console.log('Search params:', window.location.search);
    </script>
    """, unsafe_allow_html=True)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    st.write("**Environment Variables:**")
    st.write(f"GOOGLE_CLIENT_ID: {'‚úÖ Set' if GOOGLE_CLIENT_ID else '‚ùå Missing'}")
    st.write(f"GOOGLE_CLIENT_SECRET: {'‚úÖ Set' if GOOGLE_CLIENT_SECRET else '‚ùå Missing'}")
    st.write(f"REDIRECT_URI: {REDIRECT_URI}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º session state
    st.write("**Session State:**")
    st.write(f"oauth_state: {st.session_state.oauth_state}")
    st.write(f"authenticated: {st.session_state.authenticated}")
    if st.session_state.user_info:
        st.write(f"user_info: {st.session_state.user_info.get('name', 'Unknown')}")
    
    # –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if 'code' in query_params:
        st.success("üéâ –ù–∞–π–¥–µ–Ω authorization code!")
        
        code = query_params['code']
        state = query_params.get('state', '')
        
        st.write(f"**Code:** {code[:30]}...")
        st.write(f"**State:** {state[:30]}...")
        st.write(f"**Stored state:** {st.session_state.oauth_state[:30] if st.session_state.oauth_state else 'None'}...")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–ª–∏ –∫–Ω–æ–ø–∫–∞
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üîÑ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é", type="primary"):
                process_oauth_code(code, state)
        
        with col2:
            if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å URL"):
                clear_query_params()
                st.rerun()
    
    elif st.session_state.authenticated and st.session_state.user_info:
        st.success("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!")
        
        user_info = st.session_state.user_info
        st.write(f"**–ò–º—è:** {user_info.get('name')}")
        st.write(f"**Email:** {user_info.get('email')}")
        st.write(f"**ID:** {user_info.get('id')}")
        
        col1, col2 = st.columns(2)
        with col1:
            if st.button("üöÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é"):
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
                st.info("–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é...")
        
        with col2:
            if st.button("üö™ –í—ã–π—Ç–∏"):
                logout()
                st.rerun()
    
    else:
        st.info("üë§ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
        
        if GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET:
            if st.button("üîê –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google", type="primary"):
                auth_url = generate_auth_url()
                st.write(f"–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º redirect –Ω–∞: {auth_url}")
                
                # Redirect —á–µ—Ä–µ–∑ JavaScript
                st.markdown(f"""
                <script>
                window.location.href = '{auth_url}';
                </script>
                """, unsafe_allow_html=True)
                
                st.info("–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ Google...")
        else:
            st.error("‚ùå OAuth –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    st.markdown("---")
    st.write("### üõ†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É"):
            st.rerun()
    
    with col2:
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë"):
            clear_query_params()
            logout()
            st.rerun()
    
    with col3:
        if st.button("üìã –ü–æ–∫–∞–∑–∞—Ç—å session"):
            st.json(dict(st.session_state))

def generate_auth_url():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    state = base64.urlsafe_b64encode(os.urandom(32)).decode('utf-8')
    st.session_state.oauth_state = state
    
    params = {
        'client_id': GOOGLE_CLIENT_ID,
        'redirect_uri': REDIRECT_URI,
        'scope': 'openid email profile',
        'response_type': 'code',
        'state': state,
        'access_type': 'offline',
        'prompt': 'consent'
    }
    
    auth_url = f"{GOOGLE_AUTH_URL}?{urlencode(params)}"
    st.write(f"Generated state: {state[:20]}...")
    return auth_url

def process_oauth_code(code, state):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth –∫–æ–¥"""
    st.write("### üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º state
    if state != st.session_state.oauth_state:
        st.error(f"‚ùå State –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")
        st.write(f"–ü–æ–ª—É—á–µ–Ω: {state[:20]}...")
        st.write(f"–û–∂–∏–¥–∞–ª—Å—è: {st.session_state.oauth_state[:20] if st.session_state.oauth_state else 'None'}...")
        return
    
    st.write("‚úÖ State –ø—Ä–æ–≤–µ—Ä–µ–Ω")
    
    # –û–±–º–µ–Ω–∏–≤–∞–µ–º –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω
    with st.spinner("–ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω..."):
        token_response = exchange_code_for_token(code)
        
        if token_response and 'access_token' in token_response:
            access_token = token_response['access_token']
            st.write("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            with st.spinner("–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."):
                user_info = get_user_info(access_token)
                
                if user_info:
                    st.write("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã!")
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session
                    st.session_state.authenticated = True
                    st.session_state.user_info = user_info
                    
                    st.success("üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
                    
                    # –û—á–∏—â–∞–µ–º URL –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º
                    clear_query_params()
                    st.rerun()
                else:
                    st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        else:
            st.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞")

def exchange_code_for_token(code):
    """–û–±–º–µ–Ω–∏–≤–∞–µ—Ç –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω"""
    data = {
        'client_id': GOOGLE_CLIENT_ID,
        'client_secret': GOOGLE_CLIENT_SECRET,
        'code': code,
        'grant_type': 'authorization_code',
        'redirect_uri': REDIRECT_URI,
    }
    
    try:
        response = requests.post(GOOGLE_TOKEN_URL, data=data, timeout=10)
        st.write(f"Token response status: {response.status_code}")
        
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"HTTP {response.status_code}: {response.text}")
            return None
            
    except Exception as e:
        st.error(f"Exception: {e}")
        return None

def get_user_info(access_token):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    headers = {'Authorization': f'Bearer {access_token}'}
    
    try:
        response = requests.get(GOOGLE_USERINFO_URL, headers=headers, timeout=10)
        st.write(f"User info response status: {response.status_code}")
        
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"HTTP {response.status_code}: {response.text}")
            return None
            
    except Exception as e:
        st.error(f"Exception: {e}")
        return None

def clear_query_params():
    """–û—á–∏—â–∞–µ—Ç query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"""
    try:
        st.query_params.clear()
        st.write("‚úÖ Query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—á–∏—â–µ–Ω—ã")
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {e}")

def logout():
    """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
    st.session_state.authenticated = False
    st.session_state.user_info = None
    st.session_state.oauth_state = None

if __name__ == "__main__":
    main()
