# main.py - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏–∑—É—á–µ–Ω–∏—è

import streamlit as st
import os
import requests
from urllib.parse import urlencode
import base64
import datetime
import time
import random
from typing import Dict, List, Tuple, Optional
from dataclasses import dataclass
from enum import Enum

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
st.set_page_config(
    page_title="Verb Trainer - Learn Spanish & Catalan",
    page_icon="üá™üá∏",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# OAuth –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
GOOGLE_CLIENT_ID = os.getenv('GOOGLE_CLIENT_ID', '')
GOOGLE_CLIENT_SECRET = os.getenv('GOOGLE_CLIENT_SECRET', '')
REDIRECT_URI = os.getenv('REDIRECT_URI', 'https://your-app.herokuapp.com')

GOOGLE_AUTH_URL = "https://accounts.google.com/o/oauth2/auth"
GOOGLE_TOKEN_URL = "https://oauth2.googleapis.com/token"
GOOGLE_USERINFO_URL = "https://www.googleapis.com/oauth2/v2/userinfo"

# CSS —Å—Ç–∏–ª–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.markdown("""
<style>
    .main > div {
        max-width: 1200px;
        padding: 0;
    }
    
    .stApp {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #ff6b6b 100%);
        min-height: 100vh;
    }
    
    .main-container {
        padding: 2rem;
        color: white;
    }
    
    .header-section {
        text-align: center;
        margin-bottom: 3rem;
        opacity: 0;
        animation: fadeInUp 1s ease-out 0.2s forwards;
    }
    
    .app-title {
        font-size: 4rem;
        font-weight: 800;
        margin-bottom: 1rem;
        text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    }
    
    .app-subtitle {
        font-size: 1.5rem;
        font-weight: 300;
        margin-bottom: 1rem;
        opacity: 0.9;
    }
    
    .app-description {
        font-size: 1.1rem;
        opacity: 0.8;
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }
    
    .language-choice {
        display: flex;
        gap: 2rem;
        justify-content: center;
        margin: 3rem 0;
        opacity: 0;
        animation: fadeInUp 1s ease-out 0.4s forwards;
    }
    
    .language-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(20px);
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: 2rem;
        padding: 3rem 2rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        position: relative;
        overflow: hidden;
        width: 300px;
        height: 400px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    
    .language-card:hover {
        transform: translateY(-10px) scale(1.02);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        border-color: rgba(255, 255, 255, 0.4);
    }
    
    .language-card.spanish {
        background: linear-gradient(135deg, rgba(255, 193, 7, 0.2), rgba(220, 53, 69, 0.2));
    }
    
    .language-card.catalan {
        background: linear-gradient(135deg, rgba(255, 107, 107, 0.2), rgba(254, 202, 87, 0.2));
    }
    
    .flag {
        font-size: 5rem;
        margin-bottom: 1rem;
        display: block;
    }
    
    .language-name {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    }
    
    .language-description {
        font-size: 1.1rem;
        opacity: 0.8;
        line-height: 1.5;
        margin-bottom: 1.5rem;
    }
    
    .verb-count {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        font-weight: 600;
        display: inline-block;
        margin-top: 1rem;
    }
    
    .features {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-top: 3rem;
        opacity: 0;
        animation: fadeInUp 1s ease-out 0.6s forwards;
    }
    
    .feature {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(15px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 1.5rem;
        padding: 2rem;
        text-align: center;
    }
    
    .feature-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }
    
    .feature-title {
        font-size: 1.3rem;
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .feature-description {
        opacity: 0.8;
        line-height: 1.5;
    }
    
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    /* –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è */
    @media (max-width: 768px) {
        .language-choice {
            flex-direction: column;
            align-items: center;
        }
        
        .language-card {
            width: 100%;
            max-width: 300px;
            height: 350px;
        }
        
        .app-title {
            font-size: 2.5rem;
        }
        
        .app-subtitle {
            font-size: 1.2rem;
        }
        
        .features {
            grid-template-columns: 1fr;
        }
    }
</style>
""", unsafe_allow_html=True)

def init_session_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state"""
    if 'oauth_state' not in st.session_state:
        st.session_state.oauth_state = None
    if 'authenticated' not in st.session_state:
        st.session_state.authenticated = False
    if 'user_info' not in st.session_state:
        st.session_state.user_info = None
    if 'interface_language' not in st.session_state:
        st.session_state.interface_language = 'en'
    if 'learning_language' not in st.session_state:
        st.session_state.learning_language = None  # 'spanish' –∏–ª–∏ 'catalan'
    if 'page' not in st.session_state:
        st.session_state.page = 'language_selection'

def show_language_selector():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    col1, col2, col3 = st.columns([2, 1, 2])
    with col2:
        interface_lang = st.selectbox(
            "Interface Language",
            options=['en', 'ru'],
            format_func=lambda x: 'üá∫üá∏ English' if x == 'en' else 'üá∑üá∫ –†—É—Å—Å–∫–∏–π',
            index=0 if st.session_state.interface_language == 'en' else 1,
            key="interface_language_selector"
        )
        if interface_lang != st.session_state.interface_language:
            st.session_state.interface_language = interface_lang
            st.rerun()

def get_text(key: str) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    translations = {
        'en': {
            'app_title': 'Verb Trainer',
            'app_subtitle': 'Master verb conjugations with spaced repetition',
            'app_description': 'Learn Spanish and Catalan verbs effectively using the proven SM-2 algorithm. Our intelligent system shows you cards exactly when you\'re about to forget them, maximizing your learning efficiency.',
            'spanish_title': 'Spanish',
            'spanish_description': 'Learn the most important Spanish verbs with comprehensive conjugations across all major tenses.',
            'spanish_verbs': '100+ verbs',
            'catalan_title': 'Catal√†',
            'catalan_description': 'Master Catalan verb conjugations with our specialized trainer designed for this beautiful Romance language.',
            'catalan_verbs': '30+ verbs',
            'smart_repetition': 'üß† Smart Repetition',
            'smart_repetition_desc': 'Our SM-2 algorithm shows cards exactly when you\'re about to forget them',
            'detailed_stats': 'üìä Detailed Statistics',
            'detailed_stats_desc': 'Track your progress with comprehensive analytics for each verb and tense',
            'efficient_learning': '‚è±Ô∏è Efficient Learning',
            'efficient_learning_desc': 'Study just 15-20 minutes daily for maximum retention and progress',
            'login_google': 'üîê Login with Google',
            'continue_without_login': 'üìö Continue without login'
        },
        'ru': {
            'app_title': '–¢—Ä–µ–Ω–∞–∂–µ—Ä –≥–ª–∞–≥–æ–ª–æ–≤',
            'app_subtitle': '–ò–∑—É—á–∞–π—Ç–µ —Å–ø—Ä—è–∂–µ–Ω–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è',
            'app_description': '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏–∑—É—á–∞–π—Ç–µ –∏—Å–ø–∞–Ω—Å–∫–∏–µ –∏ –∫–∞—Ç–∞–ª–∞–Ω—Å–∫–∏–µ –≥–ª–∞–≥–æ–ª—ã —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ SM-2. –ù–∞—à–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–º–µ–Ω–Ω–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –≤—ã –≥–æ—Ç–æ–≤—ã –∏—Ö –∑–∞–±—ã—Ç—å, –º–∞–∫—Å–∏–º–∏–∑–∏—Ä—É—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è.',
            'spanish_title': '–ò—Å–ø–∞–Ω—Å–∫–∏–π',
            'spanish_description': '–ò–∑—É—á–∏—Ç–µ –≤–∞–∂–Ω–µ–π—à–∏–µ –∏—Å–ø–∞–Ω—Å–∫–∏–µ –≥–ª–∞–≥–æ–ª—ã —Å –ø–æ–ª–Ω—ã–º–∏ —Å–ø—Ä—è–∂–µ–Ω–∏—è–º–∏ –≤–æ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–∞—Ö.',
            'spanish_verbs': '100+ –≥–ª–∞–≥–æ–ª–æ–≤',
            'catalan_title': '–ö–∞—Ç–∞–ª–∞–Ω—Å–∫–∏–π',
            'catalan_description': '–û—Å–≤–æ–π—Ç–µ —Å–ø—Ä—è–∂–µ–Ω–∏—è –∫–∞—Ç–∞–ª–∞–Ω—Å–∫–∏—Ö –≥–ª–∞–≥–æ–ª–æ–≤ —Å –Ω–∞—à–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç—Ä–µ–Ω–∞–∂–µ—Ä–æ–º –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ —Ä–æ–º–∞–Ω—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.',
            'catalan_verbs': '30+ –≥–ª–∞–≥–æ–ª–æ–≤',
            'smart_repetition': 'üß† –£–º–Ω–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ',
            'smart_repetition_desc': '–ê–ª–≥–æ—Ä–∏—Ç–º SM-2 –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–º–µ–Ω–Ω–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –≤—ã –≥–æ—Ç–æ–≤—ã –∏—Ö –∑–∞–±—ã—Ç—å',
            'detailed_stats': 'üìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
            'detailed_stats_desc': '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏',
            'efficient_learning': '‚è±Ô∏è –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
            'efficient_learning_desc': '–ò–∑—É—á–∞–π—Ç–µ –≤—Å–µ–≥–æ 15-20 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
            'login_google': 'üîê –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google',
            'continue_without_login': 'üìö –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –≤—Ö–æ–¥–∞'
        }
    }
    
    return translations.get(st.session_state.interface_language, {}).get(key, key)

def show_language_selection_page():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –∏–∑—É—á–µ–Ω–∏—è"""
    st.markdown('<div class="main-container">', unsafe_allow_html=True)
    
    # –°–µ–ª–µ–∫—Ç–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    show_language_selector()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.markdown(f'''
    <div class="header-section">
        <h1 class="app-title">{get_text('app_title')}</h1>
        <p class="app-subtitle">{get_text('app_subtitle')}</p>
        <p class="app-description">{get_text('app_description')}</p>
    </div>
    ''', unsafe_allow_html=True)
    
    # –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–∑—É—á–µ–Ω–∏—è
    st.markdown('<div class="language-choice">', unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown(f'''
        <div class="language-card spanish">
            <span class="flag">üá™üá∏</span>
            <h2 class="language-name">{get_text('spanish_title')}</h2>
            <p class="language-description">{get_text('spanish_description')}</p>
            <div class="verb-count">{get_text('spanish_verbs')}</div>
        </div>
        ''', unsafe_allow_html=True)
        
        if st.button("üá™üá∏ " + get_text('spanish_title'), key="spanish_btn", use_container_width=True, type="primary"):
            st.session_state.learning_language = 'spanish'
            st.session_state.page = 'auth_choice'
            st.rerun()
    
    with col2:
        st.markdown(f'''
        <div class="language-card catalan">
            <span class="flag">üè¥Û†Å•Û†Å≥Û†Å£Û†Å¥Û†Åø</span>
            <h2 class="language-name">{get_text('catalan_title')}</h2>
            <p class="language-description">{get_text('catalan_description')}</p>
            <div class="verb-count">{get_text('catalan_verbs')}</div>
        </div>
        ''', unsafe_allow_html=True)
        
        if st.button("üè¥Û†Å•Û†Å≥Û†Å£Û†Å¥Û†Åø " + get_text('catalan_title'), key="catalan_btn", use_container_width=True, type="primary"):
            st.session_state.learning_language = 'catalan'
            st.session_state.page = 'auth_choice'
            st.rerun()
    
    st.markdown('</div>', unsafe_allow_html=True)
    
    # –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
    st.markdown('<div class="features">', unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.markdown(f'''
        <div class="feature">
            <div class="feature-icon">üß†</div>
            <h3 class="feature-title">{get_text('smart_repetition')}</h3>
            <p class="feature-description">{get_text('smart_repetition_desc')}</p>
        </div>
        ''', unsafe_allow_html=True)
    
    with col2:
        st.markdown(f'''
        <div class="feature">
            <div class="feature-icon">üìä</div>
            <h3 class="feature-title">{get_text('detailed_stats')}</h3>
            <p class="feature-description">{get_text('detailed_stats_desc')}</p>
        </div>
        ''', unsafe_allow_html=True)
    
    with col3:
        st.markdown(f'''
        <div class="feature">
            <div class="feature-icon">‚è±Ô∏è</div>
            <h3 class="feature-title">{get_text('efficient_learning')}</h3>
            <p class="feature-description">{get_text('efficient_learning_desc')}</p>
        </div>
        ''', unsafe_allow_html=True)
    
    st.markdown('</div>', unsafe_allow_html=True)
    st.markdown('</div>', unsafe_allow_html=True)

def show_auth_choice_page():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ –≤—Ö–æ–¥–∞"""
    st.markdown('<div class="main-container">', unsafe_allow_html=True)
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    if st.button("‚Üê –ù–∞–∑–∞–¥", key="back_btn"):
        st.session_state.page = 'language_selection'
        st.rerun()
    
    language_flag = "üá™üá∏" if st.session_state.learning_language == 'spanish' else "üè¥Û†Å•Û†Å≥Û†Å£Û†Å¥Û†Åø"
    language_name = get_text('spanish_title') if st.session_state.learning_language == 'spanish' else get_text('catalan_title')
    
    st.markdown(f'''
    <div class="header-section">
        <h1 class="app-title">{language_flag} {language_name}</h1>
        <p class="app-subtitle">–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—Ö–æ–¥–∞</p>
    </div>
    ''', unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns([1, 2, 1])
    
    with col2:
        st.markdown("<br><br>", unsafe_allow_html=True)
        
        # –í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google
        if st.button(get_text('login_google'), key="login_google_btn", use_container_width=True, type="primary"):
            start_oauth_flow()
        
        st.markdown("<br>", unsafe_allow_html=True)
        
        # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –≤—Ö–æ–¥–∞
        if st.button(get_text('continue_without_login'), key="continue_without_login_btn", use_container_width=True):
            st.session_state.authenticated = False
            st.session_state.page = 'trainer'
            st.rerun()
    
    st.markdown('</div>', unsafe_allow_html=True)

def start_oauth_flow():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç OAuth flow"""
    state = base64.urlsafe_b64encode(os.urandom(32)).decode('utf-8')
    st.session_state.oauth_state = state
    
    params = {
        'client_id': GOOGLE_CLIENT_ID,
        'redirect_uri': REDIRECT_URI,
        'scope': 'openid email profile',
        'response_type': 'code',
        'state': state,
        'access_type': 'offline',
        'prompt': 'consent'
    }
    
    auth_url = f"{GOOGLE_AUTH_URL}?{urlencode(params)}"
    st.markdown(f'<meta http-equiv="refresh" content="0;url={auth_url}">', unsafe_allow_html=True)

def handle_oauth_callback(query_params):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç OAuth callback"""
    code = query_params.get('code')
    state = query_params.get('state')
    error = query_params.get('error')
    
    if error:
        st.error(f"‚ùå OAuth Error: {error}")
        return
    
    if not code or not state:
        st.error("‚ùå Missing authorization parameters")
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–¥
    with st.spinner("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é..."):
        success = process_authorization_code(code)
        
        if success:
            st.session_state.page = 'trainer'
            st.success("üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            time.sleep(1)
            st.rerun()
        else:
            st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞")

def process_authorization_code(code):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç authorization code"""
    try:
        token_data = exchange_code_for_token(code)
        if not token_data or 'access_token' not in token_data:
            return False
        
        user_info = get_user_info(token_data['access_token'])
        if not user_info:
            return False
        
        st.session_state.authenticated = True
        st.session_state.user_info = user_info
        
        return True
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def exchange_code_for_token(code):
    """–û–±–º–µ–Ω–∏–≤–∞–µ—Ç –∫–æ–¥ –Ω–∞ —Ç–æ–∫–µ–Ω"""
    data = {
        'client_id': GOOGLE_CLIENT_ID,
        'client_secret': GOOGLE_CLIENT_SECRET,
        'code': code,
        'grant_type': 'authorization_code',
        'redirect_uri': REDIRECT_URI,
    }
    
    response = requests.post(GOOGLE_TOKEN_URL, data=data, timeout=10)
    return response.json() if response.status_code == 200 else None

def get_user_info(access_token):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    headers = {'Authorization': f'Bearer {access_token}'}
    response = requests.get(GOOGLE_USERINFO_URL, headers=headers, timeout=10)
    return response.json() if response.status_code == 200 else None

def show_trainer_page():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–µ–Ω–∞–∂–µ—Ä"""
    if st.session_state.learning_language == 'spanish':
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø–∞–Ω—Å–∫–∏–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä
        import spanish_trainer
        spanish_trainer.show_trainer()
    else:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–∞—Ç–∞–ª–∞–Ω—Å–∫–∏–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä
        import catalan_trainer
        catalan_trainer.show_trainer()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    init_session_state()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OAuth callback
    query_params = dict(st.query_params)
    
    if 'code' in query_params and 'state' in query_params:
        handle_oauth_callback(query_params)
        return
    
    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
    if st.session_state.page == 'language_selection':
        show_language_selection_page()
    elif st.session_state.page == 'auth_choice':
        show_auth_choice_page()
    elif st.session_state.page == 'trainer':
        show_trainer_page()
    else:
        show_language_selection_page()

if __name__ == "__main__":
    main()
